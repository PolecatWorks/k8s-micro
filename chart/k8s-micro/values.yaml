


env: {}

args:
  - --config
  - /opt/app/configs/serviceconfig.yaml
  - --secret-dir
  - /opt/app/secrets

volumes: &volumes
  - name: configs
    configMap:
      name: "{{ template \"k8s-micro.fullname\" . }}"
  - name: objects
    emptyDir:
      sizeLimit: 500Mi
  - name: secrets
    projected:
      sources:
        - secret:
            optional: true
            name: "{{ .Values.secretName | default (include \"k8s-micro.fullname\" .) }}"
            items:
              - key: username
                path: database/username
              - key: password
                path: database/password


volumeMounts: &volume-mount
  - name: configs
    mountPath: /opt/app/configs
  - name: objects
    # TODO: remove objects as we use real object-store
    mountPath: /opt/app/objects
  - name: secrets
    mountPath: /opt/app/secrets

configs:  # Overrides merge into configs/config.yaml
  kafkaProcessor:
    applicationId: k8s-micro-app
    bootstrapServers: localhost:9092
    processingGuarantee: exactly_once_v2
    autoOffsetReset: latest
    # readTopic: input
    # writeTopic: output
    # taskSleepDuration: 10s
    # querySleep: 15s


replicaCount: 1

lifecycle:
  preStop:
    httpGet:
      port: http-health
      path: "/hams/stop"
livenessProbe:
  httpGet:
    port: http-health
    path: "/hams/alive"
  periodSeconds: 30
  initialDelaySeconds: 30
readinessProbe:
  httpGet:
    port: http-health
    path: "/hams/ready"
  periodSeconds: 5



image:
  repository: k8s-micro
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
